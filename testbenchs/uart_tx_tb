----------------------------------------------------------------------------------
-- Author:          Jules CONTADIN
-- 
-- Create Date:     30.05.2024 19:20:41
-- Module Name:     UART_TX_tb - Behavioral
-- Target Devices:  MachXO3LF-9400C
-- Description: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity UART_TX_tb is
end UART_TX_tb;

architecture Behavioral of UART_TX_tb is
    -- Component UTT
    component UART_TX
      generic(
        constant FREQ_CLK_IN : integer := 50E6;
        constant FIFO_DEPTH : integer := 8;
        constant DATA_BITS	: integer := 8;		
        constant STOP_BITS	: integer := 1
        );
      Port ( 
        clk :   in STD_LOGIC;
        reset : in STD_LOGIC;
        baudrate_choice : in STD_LOGIC_VECTOR (7 downto 0);
        wr_en : in STD_LOGIC;
        rd_en : in STD_LOGIC;
        fifo_data_in : in STD_LOGIC_VECTOR(DATA_BITS-1 downto 0);
        tx_out : out STD_LOGIC;
        fifo_fill_level : out STD_LOGIC_VECTOR(7 downto 0);
        fifo_data_written : out std_logic;
        fifo_data_read : out std_logic;
        uart_tx_busy : out STD_LOGIC
        );
    end component;
    -- Input signals
    signal clk, reset: STD_LOGIC := '0';
    signal wr_en, rd_en : STD_LOGIC := '0';
    signal baudrate_choice: STD_LOGIC_VECTOR(7 downto 0) := "00000011"; -- 11 => 9600 bauds; PÃ©riode = 78.125 us
    signal fifo_data_in : STD_LOGIC_VECTOR(7 downto 0);
    -- Output signals
    signal tx_out : STD_LOGIC;
    signal fifo_fill_level : STD_LOGIC_VECTOR(7 downto 0);
    signal fifo_data_written : STD_LOGIC;
    signal fifo_data_read : STD_LOGIC;
    signal uart_tx_busy : STD_LOGIC;
    -- Constant
    constant CLOCK_PERIOD : time := 10 ns;
    constant BAUD_PERIOD : time := 78 us;
    
begin
    uut : UART_TX
        port map(
            clk,
            reset,
            baudrate_choice,
            wr_en,
            rd_en,
            fifo_data_in,
            tx_out, 
            fifo_fill_level,
            fifo_data_written,
            fifo_data_read,
            uart_tx_busy);
                       
    -- Clock process
    clk_process: process
    begin
        clk <= '0';
        wait for CLOCK_PERIOD / 2;
        clk <= '1';
        wait for CLOCK_PERIOD / 2;
    end process;
    
    -- Write and read process
    stimulus_process: process
    begin
        -- Wait for reset
        reset <= '1';
        wait for CLOCK_PERIOD;
        reset <= '0';
        wait for CLOCK_PERIOD; 
        -- Example write until full
        wr_en <= '1';
        rd_en <= '1';
        fifo_data_in <= "00000001";
        wait for CLOCK_PERIOD;
        fifo_data_in <= "00000010";
        wait for CLOCK_PERIOD;
        rd_en <= '0';
        fifo_data_in <= "00000011";
        wait for CLOCK_PERIOD;
        fifo_data_in <= "00000100";
        wait for CLOCK_PERIOD;
        wr_en <= '0';
        
        wait for BAUD_PERIOD;
        rd_en <= '1';
        wait for CLOCK_PERIOD;
        rd_en <= '0';
        
        wait until uart_tx_busy = '0';
        wait for CLOCK_PERIOD;
        rd_en <= '1';     
        wait for CLOCK_PERIOD;
        rd_en <= '0';

        wait;
    end process;
end Behavioral;
